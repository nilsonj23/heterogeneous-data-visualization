<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB" crossorigin="anonymous">

    <link rel='stylesheet' href='/stylesheets/style.css' />

    <!-- JQuery -->
    <script type="text/javascript" src="/jquery/jquery-3.5.1.min.js"></script>

    <!-- Load d3.js -->
    <script type="text/javascript" src="https://d3js.org/d3.v4.js"></script>

    <!-- Funcionalidades -->
    <script type="text/javascript" src="/js/exemplo.js?v=datetime()"></script>

    <!-- TESTE GRAFICO SANKEY -->
    <!-- Load the sankey.js function -->
    <script src="https://cdn.jsdelivr.net/gh/holtzy/D3-graph-gallery@master/LIB/sankey.js"></script>
    <!-- Add style to links or they won't appear properly-->
    <style>
        .link {
            fill: none;
            stroke: #000;
            stroke-opacity: .2;
        }
        .link:hover {
            stroke-opacity: .5;
        }
    </style>

</head>

<body>
    <!-----------------------------------------------------  Cabeçalho  ------------------------------------------------->

    <nav class="navbar navbar-expand-lg navbar-dark" id="cab">
      <div class="container">
                                
        <!-- navbar-brnad : É o nome de destaque que fica na lateral esquerda do navbar -->
        <a class="navbar-brand h1 mb-0" href="#">VisHD</a>

        <!-- Botão de expandir e recolher do navbar -->
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSite">
            <span class="navbar-toggler-icon"></span>
        </button>
      <ul class="navbar-nav ">
        <li class="nav-item">
          <a class="nav-link" href="/">Início</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">Análise</a>
          </li>
        <li class="nav-item active">
          <a class="nav-link" href="#">Visualização</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Sobre</a>
        </li>
      </ul>
      </div>
    </nav>

    <!-----------------------------------------------------  Scrollspy  ------------------------------------------------->
      
    <div class="container">

      <div class="row">
      
          <!-- my-5 : margem em todo eixo y, tanto margem top como margem bottom -->
          <div class="col-12 text-center my-5">
              <h1>   Tipos de Visualizações de Dados</h1>
              <p>Aqui você pode ver os seus dados imputados de forma visual:</p>
          </div>
      </div>

      <button class="btn btn-success mt-2 text-center btn-sm" type="button" id="btGraficoPIB">Gráfico PIB</button>
      <button class="btn btn-success mt-2 text-center btn-sm" type="button" id="btVarRecebidaJS">VarRecebidaJS</button>
      <button class="btn btn-success mt-2 text-center btn-sm" type="button" id="btSankey1">Sankey 1</button>

      <div>

        <div id="chart" class="col-sm-12" style="background-color: #ccc;">
        </div>
  
      </div>

  </div> 

  <!----------------------------------------------- Footer -------------------------------------------->
    <div class="container-fluid mt-5">
      <div class="row footer-top">
        <div class="col-sm-4 text-center">
          <h4 class="ft-text-title mb-4">Projeto VisHD</h4>
          <h6 class="ft-desp">UERJ- Universidade do Rio de Janeiro 
            <br>IME- Instituto de Matematica e Estatistica
            <br>Ciência da Computação
            <p class="mt-3"><b>Orientado por Marcelo Schots</b></p>
          </h6>
        </div>
          <div class="col-sm-4 text-center border-left">
            <h4 class="ft-text-title">Colaboradores:</h4>
            <div class="address-member">
              <p class="member mb-2">Aislan Célio Ferreira</p>
              <p class="member mb-2">Claudio Henrique Medaber Jambo</p>
              <p class="member mb-2">Gedir Fabiano de Moraes Gonçalves</p>
              <p class="member mb-2">Nilson Junio Souza da Silva</p>
              <p class="member mb-2">Paulo Victor Pimentel Coelho</p>
            </div>
          </div>
          <div class="col-sm-4 col-xs-12 text-center border-left">
            <h4 class="ft-text-title">Sobre</h4>
            <div class="pspt-dtls">
              <a href="#" class="about">Artigo</a>
              <a href="https://github.com/nilsonj23/heterogeneous-data-visualization" class="team">Git</a>
            </div>
          </div>
      </div>
      <div class="row ft-copyright pt-2 pb-2" style="padding-left: 25px;">
				<div class="col-xs-12 col-sm-12 col-md-12 mt-2 mt-sm-2 text-center text-white">
					<p class="mb-0 mt-0">© Copyright 2020 | All Rights Reserved.</p>
				</div>
				<hr>
			</div>	
      </div>
    </div>


    <script type="text/javascript">
  
        var dataset;

        var chartBuilded = 0;
        var margin;
        var svg;
        var x;
        var xAxis;
        var y;
        var yAxis;

        alunos = [
        {"id":1, "nome":"Antonio", "disciplina":"Engenharia de Software", "nivel":"Graduação", "regiao":"Zona Sul"},
        {"id":2, "nome":"Bento", "disciplina":"Lógica de Computação", "nivel":"Graduação", "regiao":"Zona Sul"},
        {"id":3, "nome":"Bento", "disciplina":"Algoritmos em Grafos", "nivel":"Graduação", "regiao":"Zona Sul"},
        {"id":4, "nome":"Carlos", "disciplina":"Banco de Dados", "nivel":"Mestrado", "regiao":"Zona Norte"},
        {"id":5, "nome":"Daniel", "disciplina":"Banco de Dados", "nivel":"Mestrado", "regiao":"Baixada Fluminense"},
        {"id":6, "nome":"Erico", "disciplina":"Engenharia de Software", "nivel":"Graduação", "regiao":"Baixada Fluminense"},
        {"id":7, "nome":"Fernanda", "disciplina":"Sistemas Operacionais I", "nivel":"Doutorado", "regiao":"Zona Oeste"},
        {"id":8, "nome":"Glaucio", "disciplina":"Lógica de Computação", "nivel":"Graduação", "regiao":"Zona Oeste"},
        {"id":9, "nome":"Carlos", "disciplina":"Visão Computacional", "nivel":"Mestrado", "regiao":"Zona Norte"},
        {"id":10, "nome":"Carlos", "disciplina":"Álgebra Linear", "nivel":"Mestrado", "regiao":"Zona Norte"}
        ];
        console.log(alunos);

        function mostrarSankey1() {
            console.log('mostrarSankey1');

            // Regiao, Nivel, Disciplina
            //Baixada			Mestrado		Engenharia de Software
            //Zona Norte		Graduação		Lógica de Computação
            //Zona Oeste		Doutorado		Algoritmos em Grafos
            //Zona Sul					        Banco de Dados
            //                                  Sistemas Operacionais I
            dataChart = {
                "nodes":[
                    {"node":0,"name":"Baixada"},
                    {"node":1,"name":"Zona Norte"},
                    {"node":2,"name":"Zona Oeste"},
                    {"node":3,"name":"Zona Sul"},
                    {"node":4,"name":"Graduação"},
                    {"node":5,"name":"Mestrado"},
                    {"node":6,"name":"Doutorado"},
                    {"node":7,"name":"Engenharia de Software"},
                    {"node":8,"name":"Lógica de Computação"},
                    {"node":9,"name":"Algoritmos em Grafos"},
                    {"node":10,"name":"Banco de Dados"},
                    {"node":11,"name":"Sistemas Operacionais I"},
                    {"node":12,"name":"Visão Computacional"},
                    {"node":13,"name":"Álgebra Linear"}
                ],
                "links":[
                    {"source":0,"target":4,"value":1},
                    {"source":0,"target":5,"value":1},
                    {"source":1,"target":5,"value":1},
                    {"source":2,"target":4,"value":1},
                    {"source":2,"target":6,"value":1},
                    {"source":3,"target":4,"value":3},
                    {"source":4,"target":7,"value":2},
                    {"source":4,"target":8,"value":2},
                    {"source":4,"target":9,"value":1},
                    {"source":5,"target":10,"value":2},
                    {"source":5,"target":12,"value":1},
                    {"source":5,"target":13,"value":1},
                    {"source":6,"target":11,"value":1}
                ]
            };

            // set the dimensions and margins of the graph
            var margin = {top: 10, right: 20, bottom: 10, left: 10};
            // Usando a largura do componente DIV.
            var widthTexto = $('#chart').css('width');
            var width = widthTexto.substr(0,widthTexto.length-2);
            width = width - margin.left - margin.right;
            var height = 480 - margin.top - margin.bottom;

            // append the svg object to the body of the page
            var svg = d3.select("#chart").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");
            
            // Color scale used
            var color = d3.scaleOrdinal(d3.schemeCategory20);

            // Set the sankey diagram properties
            var sankey = d3.sankey()
                .size([width, height]);


            // Constructs a new Sankey generator with the default settings.
            sankey
                .nodes(dataChart.nodes)
                .links(dataChart.links)
                .layout(1);
            
            // add in the links
            var link = svg.append("g")
                .selectAll(".link")
                .data(dataChart.links)
                .enter()
                .append("path")
                .attr("class", "link")
                .attr("d", sankey.link() )
                .style("stroke-width", function(d) { return Math.max(1, d.dy); })
                .sort(function(a, b) { return b.dy - a.dy; });
            
            // add in the nodes
            var node = svg.append("g")
                .selectAll(".node")
                .data(dataChart.nodes)
                .enter().append("g")
                .attr("class", "node")
                .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
                .call(d3.drag()
                    .subject(function(d) { return d; })
                    .on("start", function() { this.parentNode.appendChild(this); })
                    .on("drag", dragmove));
            
            // add the rectangles for the nodes
            node
            .append("rect")
            .attr("height", function(d) { 
                return d.dy; 
            })
            .attr("width", sankey.nodeWidth())
            .style("fill", function(d) { 
                console.log('fill');
                console.log(d);
                console.log(d.name.replace(/ .*/, ""));
                return d.color = color(d.name);
                //return d.color = color(d.name.replace(/ .*/, "")); 
            })
            .style("stroke", function(d) { return d3.rgb(d.color).darker(2); })
            // Add hover text
            .append("title")
            .text(function(d) { return d.name + "\n" + "Existem " + d.value + " alunos neste nó"; });
        
            // add in the title for the nodes
            node
            .append("text")
                .attr("x", -6)
                .attr("y", function(d) { return d.dy / 2; })
                .attr("dy", ".35em")
                .attr("text-anchor", "end")
                .attr("transform", null)
                .text(function(d) { return d.name; })
                .filter(function(d) { return d.x < width / 2; })
                .attr("x", 6 + sankey.nodeWidth())
                .attr("text-anchor", "start");
            
            // the function for moving the nodes
            function dragmove(d) {
                d3.select(this)
                .attr("transform",
                        "translate("
                        + d.x + ","
                        + (d.y = Math.max(
                            0, Math.min(height - d.dy, d3.event.y))
                            ) + ")");
                sankey.relayout();
                link.attr("d", sankey.link() );
            }

        }

        function varRecebidaJS() {
            // O objeto JSON passado como parâmetro para o render, 
            // pode ser armazenado em uma variável JS no lado cliente
            // através da seguinte instrução:
            newObj = JSON.parse('<%- JSON.stringify(content) %>');
            console.log(newObj);
            // O parametro "content" é o nome da chave usado no render
        }
  
        function iniciarGrafico() {
  
            chartBuilded = 1;
    
            // set the dimensions and margins of the graph
            margin = {top: 30, right: 30, bottom: 70, left: 60},
            width = 460 - margin.left - margin.right,
            height = 400 - margin.top - margin.bottom;
    
            // append the svg object
            svg = d3.select("#chart")
            .append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");
    
            // Initialize the X axis
            x = d3.scaleBand()
            .range([ 0, width ])
            .padding(0.2);
    
            xAxis = svg.append("g")
            .attr("transform", "translate(0," + height + ")")
    
            // Initialize the Y axis
            y = d3.scaleLinear()
            .range([ height, 0]);
    
            yAxis = svg.append("g")
            .attr("class", "myYaxis")
    
            titulo = svg.append("text")
            .attr("id", "header")
            .attr("x", 0 )
            .attr("y", -10 )
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .attr("fill","#808080");
  
        }
  
        // A function that create / update the plot for a given variable:
        function updateGrafico(selectedVar) {
  
            if (chartBuilded == 0) iniciarGrafico();
  
            /*
            dataset = [
                { uf: 'RJ', pib: 1100, covid:	20 },
                { uf: 'ES', pib: 1000, covid:	8 },
                { uf: 'SP', pib: 2100, covid:	22 },
                { uf: 'MG', pib: 1300, covid:	17 },
                { uf: 'RS', pib: 1500, covid:	8 },
                { uf: 'PR', pib: 1200, covid:	13 },
                { uf: 'SC', pib: 1300, covid:	14 },
            ];
            */

            dataset = [];
            <% for (item of content){%>
            dataset.push( {uf: '<%= item.uf %>', pib: '<%= item.pib %>', covid: '<%= item.covid %>'} )
            <% } %>

            //console.log( dataset );
            
            data = dataset;
    
            // X axis
            x.domain(data.map(function(d) { return d.uf; }))
            xAxis.transition().duration(1000).call(d3.axisBottom(x))
    
            // Add Y axis
            y.domain([0, d3.max(data, function(d) { return +d[selectedVar] }) ]);
            yAxis.transition().duration(1000).call(d3.axisLeft(y));
    
            // variable u: map data to existing bars
            var u = svg.selectAll("rect").data(data);
    
            // update bars
            u.enter()
            .append("rect")
            .merge(u)
            .transition()
            .duration(1000)
            .attr("x", function(d) { return x(d.uf); })
            .attr("y", function(d) { return y(d[selectedVar]); })
            .attr("width", x.bandwidth())
            .attr("height", function(d) { return height - y(d[selectedVar]); })
            .attr("class", function(d) { 
                if (d.uf == "RJ")
                return "barra_azul"; 
                else
                return "barra_vermelha"; 
            })
  
            if (selectedVar == 'pib')
            tmp = "Produto Interno Bruto por Unidade da Federação";
            else
            tmp = "Número de mortes COVID por Unidade da Federação";
    
            svg.select("#header")
            .text(tmp);
  
        }
  
        $( document ).ready(function() {
      
            $( "#btGraficoPIB" ).click(function( e ) {
            updateGrafico('pib');
            });
            $( "#btVarRecebidaJS" ).click(function( e ) {
                varRecebidaJS();
            });
            $( "#btSankey1" ).click(function( e ) {
                mostrarSankey1();
            });
  
        });
    </script>

</body>
</html>
